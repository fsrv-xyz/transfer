---
build:
  image: golang
  variables:
    CGO_ENABLED: 0
    GOOS: linux
    GOARCH: amd64
  script:
    - |
      go build -o app -ldflags "-s -w \
        -X github.com/fsrv-xyz/version.Version=${CI_JOB_ID} \
        -X github.com/fsrv-xyz/version.Revision="${CI_COMMIT_SHORT_SHA}" \
        -X github.com/fsrv-xyz/version.Branch="${CI_COMMIT_REF_NAME}" \
        -X github.com/fsrv-xyz/version.BuildUser=${CI_REGISTRY_USER} \
        -X github.com/fsrv-xyz/version.BuildDate=$(date +%F_%H-%M)"
  artifacts:
    paths:
      - app

container-build:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  only:
    - tags
  needs:
    - build
  dependencies:
    - build
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"
      --destination "${CI_REGISTRY_IMAGE}:latest"

semantic_release:
  image: registry.fsrv.services/fsrvcorp/container/payipi:latest
  needs:
    - build
  dependencies:
    - build
  variables:
    GIT_STRATEGY: clone
    GIT_DEPTH: 0
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - get-next-version -f json
    - VERSION="$(get-next-version -f json | jq -r 'select(.hasNextVersion==true) | .version')"
    - echo $VERSION
    - test -z "$VERSION" || curl --silent --request POST --header "PRIVATE-TOKEN:${CI_BOT_TOKEN}" "https://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/repository/tags?tag_name=${VERSION}&ref=${CI_DEFAULT_BRANCH}" | jq
