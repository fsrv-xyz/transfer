---

build:
  image: golang
  variables:
    CGO_ENABLED: 0
    GOOS: linux
    GOARCH: amd64
  script:
    - |
      go build -o app -ldflags "-s -w \
        -X github.com/fsrv-xyz/version.Version=${CI_JOB_ID} \
        -X github.com/fsrv-xyz/version.Revision="${CI_COMMIT_SHORT_SHA}" \
        -X github.com/fsrv-xyz/version.Branch="${CI_COMMIT_REF_NAME}" \
        -X github.com/fsrv-xyz/version.BuildUser=${CI_REGISTRY_USER} \
        -X github.com/fsrv-xyz/version.BuildDate=$(date +%F_%H-%M)"
  artifacts:
    paths:
      - app

container-build:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  needs:
    - build
  dependencies:
    - build
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${REGISTRY_SERVER}\":{\"auth\":\"$(printf "%s:%s" "${REGISTRY_USERNAME}" "${REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${REGISTRY_SERVER}/${CI_PROJECT_NAME}:${CI_COMMIT_SHORT_SHA}"
      --destination "${REGISTRY_SERVER}/${CI_PROJECT_NAME}:latest"

rollout:
  variables:
    UPDATE_IMAGE_TAG: "${CI_COMMIT_SHORT_SHA}"
    UPDATE_IMAGE_NAME: "${REGISTRY_SERVER}/${CI_PROJECT_NAME}"
  needs:
    - container-build
  trigger:
    project: "fsrvcorp/deploy/transfer-service-deploy"
    branch: master
